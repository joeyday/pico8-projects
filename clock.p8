pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- main
function _init()
	cls(13)
	
	facecol=7
	dialcol=0

	-- constants

	d=29
	
	-- draw shadow
	fillp(â–’)
	circfill(68, 68, d*1.76, 1)
	for row=-1,1,2 do
		for col=-1,1,2 do
		 local x = 68+row*d
		 local y = 68+col*d
		 circfill(x, y, d/2+1, 1)
		 -- print(x..' '..y, 9)
		end
	end
	fillp()
	
	-- draw clock
	circfill(64, 64, d*1.76, facecol)
	for row=-1,1,2 do
		for col=-1,1,2 do
		 local x = 64+row*d
		 local y = 64+col*d
		 circfill(x, y, d/2+1, facecol)
		 -- print(x..' '..y, 9)
		end
	end

	-- draw dials
	for row=-1,1 do
		for col=-1,1 do
		 local x = 64+row*d
		 local y = 64+col*d
			circfill(x, y, d/2-2, dialcol)
			-- print(x..' '..y, 9)
		end
	end
	
	for row=-1,1 do
 	for col=-1,1 do
		 circfill(64+row*d, 64+col*d, 12, dialcol)
			drawhand(ceil(rnd(12)),64+row*d,64+col*d)
		end
	end

	
	f=0.1
end

function _update()
	t=ceil(f)
	f+=0.1
	if f > 12 then
		f=0.1
	end
end

function _draw()

end


-->8
-- dials
--[[ for r=0,1 do
 	for c=-1,0 do
		 circfill(64+r*d, 64+c*d, 12, dialcol)
			drawhand(t,64+r*d,64+c*d)
		end
	end ]]
	
function drawhand(v,x,y)
	sspr(c[v].sx,0,21,21,x-10,y-10,21,21,c[v].fx,c[v].fy)	
end
-->8
-- pins

-->8
-- trig constants
c = {}

a=0.16666 --starting angle

for i=1,12 do
	local const={}
	
	-- useful trig values
	const.a=a
	const.dx=cos(a)
	const.dy=sin(a)
	
	-- sprite defaults
	const.sx=8
	const.fx=false
	const.fy=false
	
	-- sprite x coord
	if i==1 or i==5 or i==7 or i==11 then
		const.sx=32
	elseif i==2 or i==4 or i==8 or i==10 then
		const.sx=56
	elseif i==3 or i==9 then
		const.sx=80
	end
	
	-- sprite flipping
	if i>=7 and i<=11 then
		const.fx=true
	end
	if i>=4 and i<=8 then
		const.fy=true
	end
	
	add(c, const)
	
	-- decrement angle (clockwise)
	a-=0.08333
	if a<0 then
		a=0.91666
	end
end

__gfx__
00000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000575000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000676000000000000000000000000077000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000000000000777000000000000000000000000776000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000005777500000000000000000000007775000000000000000000000005677000000000000000000000000000000000000000000000000000000
00000000000000006777600000000000000000000067770000000000000000000005677770000000000000000000000000000000000000000000000000000000
00000000000000000575000000000000000000000007760000000000000000000000777700000000000000000000065000000000000000000000000000000000
00000000000000000575000000000000000000000576050000000000000000000576777000000000000000000575577765000000000000000000000000000000
00000000000000000707000000000000000000000707000000000000000000000707060000000000000000000707777777765000000000000000000000000000
00000000000000000575000000000000000000000575000000000000000000000575000000000000000000000575577765000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065000000000000000000000000000000000
